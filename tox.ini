# see http://tox.readthedocs.io/en/latest/config.html
# see https://docs.pytest.org/en/latest/customize.html

[tox]
envlist =
  install-deps
  test-package
  flake
  black
toxworkdir = {toxinidir}/test_output/python/tox

# defaults for all environments
[testenv]
basepython = python3.8
deps = pipenv
setenv =
  PIPENV_PIPFILE = {toxinidir}/Pipfile

envdir = {toxworkdir}/.venv
usedevelop = true

# Allow pre-release version strings, e.g. including 'pre', 'post'.
pip_pre = False
whitelist_externals =
    mkdir
    rm
pipenv = pipenv install --dev
make_test_output_dir = mkdir -p test_output/python

# these are added inline to each `pytest` command. It is not included in the general
  # `pytest` stanza as it would otherwise be hard to override in interactive pytest
# use during development.

[testenv:install-deps]
recreate = True
commands = {[testenv]pipenv}

[testenv:test-package]
description = Run all tests
commands =
  {[testenv]make_test_output_dir}
  pytest src {posargs} --cov-config={toxinidir}/tox.ini --cov-fail-under=90

[testenv:black]
deps = black
pip_pre = True
skip_install = True
setenv =
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
commands = black --check --verbose .

[testenv:flake]
deps = flake8
skip_install = True
commands =
    rm -f test_output/python/flake8.txt
    mkdir -p test_output/python
    flake8 src

[pytest]
minversion = 5.0.1
addopts =
    -r a
    -n auto
    --doctest-modules
    --doctest-glob='*.py'
    --doctest-glob='*.rst'
    --html=test_output/python/test_report.html
    --junitxml=test_output/python/test_report.xml
    --cov-report=term-missing
    --cov-report=html:test_output/python/coverage_html
    --cov-report=xml:test_output/python/coverage.xml
python_files = test_*.py
python_classes = Test
python_functions = test
doctest_optionflags =
    NORMALIZE_WHITESPACE
    IGNORE_EXCEPTION_DETAIL
    ELLIPSIS
# tests marked xfail must fail
xfail_strict = true
markers =
  slow: marks a test that is slow in a relative or absolute sense

# see http://flake8.pycqa.org/en/latest/user/configuration.html
[flake8]
output-file = test_output/python/flake8.txt
# output to command line, in addition to file
tee = True
statistics = True
exclude =
ignore =
    # neither E203 nor W503 are PEP8-compliant
    E203
    W503
    # block comment style (E266)
    E266
    # top-level imports (E402)
    E402
max-line-length = 88
doctests = True

[coverage:run]
branch = True
data_file = test_output/python/coverage
# ignore test files
omit = *tests*

[coverage:report]
fail_under = 100
skip_covered = True
exclude_lines =
    pragma: no cover
    if __name__ == "__main__":
